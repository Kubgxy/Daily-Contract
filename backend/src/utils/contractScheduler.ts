import cron from 'node-cron';
import Employee from '../models/Employee';
import Notification from '../models/Notification';
import mongoose from 'mongoose';
import { io } from '../app'; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° import Socket.IO server

// üîÅ ‡∏£‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏∑‡∏ô
cron.schedule('0 0 * * *', async () => {
  console.log('üìÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô...');

  try {
    const today = new Date();
    const SEVEN_DAYS = 7 * 24 * 60 * 60 * 1000;

    // ‡∏î‡∏∂‡∏á‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á Active
    const employees = await Employee.find({ status: 'Active' });

    for (const employee of employees) {
      if (!employee.contract_end_date) continue;

      const timeDiff = new Date(employee.contract_end_date).getTime() - today.getTime();

      // üí° ‡∏ñ‡πâ‡∏≤‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 7 ‡∏ß‡∏±‡∏ô ‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ï‡πà‡∏≠‡∏™‡∏±‡∏ç‡∏ç‡∏≤
      if (timeDiff <= SEVEN_DAYS) {
        if (!employee.renewal_status || employee.renewal_status === 'None') {
          employee.renewal_status = 'Pending';
          await employee.save();

          console.log(`üîî ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ${employee.employee_id} ‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏™‡∏±‡∏ç‡∏ç‡∏≤ ‚Üí ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥`);

          // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Notification ‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
          await Notification.create({
            employee_id: null, // ‡∏™‡πà‡∏á‡∏ñ‡∏∂‡∏á Admin ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô
            category: 'contract',
            message: '‡∏°‡∏µ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏±‡∏ç‡∏ç‡∏≤',
            details: `‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ${employee.first_name} (${employee.employee_id}) ‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏™‡∏±‡∏ç‡∏ç‡∏≤`,
          });

          // ‚úÖ ‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô Socket
          io.emit('contract_renewal_pending', {
            message: '‡∏°‡∏µ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏±‡∏ç‡∏ç‡∏≤',
            employee: {
              name: employee.first_name,
              employee_id: employee.employee_id,
              contract_end_date: employee.contract_end_date,
            },
          });
        }
      }

      // ‚ùå ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏¢‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏™‡∏±‡∏ç‡∏ç‡∏≤ ‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
      if (timeDiff < 0 && employee.renewal_status !== 'Approved') {
        employee.status = 'Inactive';
        await employee.save();
        console.log(`‚õî ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ${employee.employee_id} ‡∏´‡∏°‡∏î‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÅ‡∏•‡πâ‡∏ß`);
      }
    }
  } catch (err) {
    console.error('‚ùå ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', err);
  }
});
